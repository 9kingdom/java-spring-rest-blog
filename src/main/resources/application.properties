spring.data.rest.default-page-size=8
spring.data.rest.basePath = /api/v1
#To ensure that the API client(s) aren’t using stale data, we can add a version to the Post and Author entities.
# Then every time a record gets updated, hibernate will automatically increment the version counter with 1.
# And the clients only need to update if the version has changed.
#Add a @Version private Long version to the Post class and the Author class after the id.
# To see this working, first re-run the app. Then in the terminal, run curl -H "Accept: application/json" -i http://localhost:8080/posts/1.
# You should see ETag: “0” at the top along with the Post’s data.
# Now we can do another GET, but instead only ask for results if the ETag is not 0 - curl -H "Accept: application/json" -H 'If-None-Match: "0"' -i http://localhost:8080/posts/1.
# This time, we get HTTP/1.1 304 Not Modified since the ETag is still 0.
# We just added a version to our entities, but what if we also wanted to add a version to the API itself? Add spring.data.rest.basePath = /api/v1 to the src/main/resources/application.properties file. Now if we run the app, the API is located at localhost:8080/api/v1/ (notice the /api/v1 at the end of the url).
# Now since the current API is V1, we can release a totally new API V2 without affecting the other users of API V1.
# (Remember to visit our app running now we need to use the new URL: http://localhost:8080/api/v1/)
